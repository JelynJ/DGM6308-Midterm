@page "/game"

<div class="game-container">
    <div class="game-header">
        <button class="exit-button" @onclick="ExitGame">Exit!!</button>
        <h1 class="game-title">Race To The Top</h1>
        <button class="reset-button" @onclick="ResetGame">RESET</button>
    </div>

    <div class="game-board">
        <div class="computer-section">
            <div class="computer-hand">
                @for (int i = 0; i < 13; i++)
                {
                        <img src="images/cards/card_back.png" alt="Card Back" class="card" />
                }
            </div>
            <div class="computer-player">
                <span class="player-icon">C</span>
                <span class="handsize">13</span>
            </div>
        </div>

        <div class="play-area">
            <div class="computer-play">
                @for (int i = 0; i < 4; i++)
                {
                        <img src="images/cards/card_empty.png" alt="Empty Card" class="card" />
                }
            </div>
            <div class="player-play">
                @for (int i = 0; i < 4; i++)
                {
                        <img src="images/cards/card_empty.png" alt="Empty Card" class="card" />
                }
            </div>
        </div>

        <div class="player-section">
            <div class="human-player">
                <span class="player-icon">P</span>
                <span class="handsize">13</span>
            </div>
            <div class="player-hand">
                @for (int i = 0; i < 13; i++)
                {
                    int index = i;
                        <img src="images/cards/card_empty.png" alt="Empty Card" class="card player-card @(selectedCards[index] ? "selected" : "")" @onclick="() => ToggleCardSelection(index)" />
                }
            </div>
        </div>
    </div>

    <div class="game-controls">
        <button class="rule-button" @onclick="ShowRules">RULE</button>
        <button class="play-button" @onclick="PlayCard">PLAY YOUR CARD!</button>
        <button class="discard-button" @onclick="DiscardCards">DISCARD</button>
        <button class="menu-button" @onclick="ShowMenu">...</button>
    </div>
</div>

<style>
    .game-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        color: #f5f5f5;
        background-color: #1c1c1e;
        padding: 20px;
        border-radius: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .game-header {
        display: flex;
        justify-content: space-between;
        width: 100%;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 2px solid #2c2c2e;
        padding-bottom: 10px;
    }

    .exit-button, .reset-button, .rule-button, .play-button, .discard-button, .menu-button {
        background-color: #0a84ff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        margin: 5px;
        font-size: 16px;
        border-radius: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .exit-button:hover, .reset-button:hover, .rule-button:hover, .play-button:hover, .discard-button:hover, .menu-button:hover {
        background-color: #005bb5;
    }

    .game-title {
        font-size: 32px;
        font-weight: 600;
        color: #f5f5f5;
    }

    .game-board {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        background-color: #2c2c2e;
        padding: 20px;
        border-radius: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .computer-section, .player-section {
        display: flex;
        justify-content: space-between;
        width: 100%;
        margin: 10px 0;
    }

    .computer-hand, .player-hand {
        display: flex;
        justify-content: space-around;
        align-items: center;
    }

    .computer-player, .human-player {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 0 20px;
    }

    .player-icon {
        font-size: 48px;
        font-weight: 600;
        color: #0a84ff;
    }

    .score {
        font-size: 32px;
        font-weight: 500;
        color: #f5f5f5;
    }

    .play-area {
        display: flex;
        flex-direction: column;
        align-items: center;
        background-color: #1c1c1e;
        padding: 20px;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin: 10px 0;
        width: 80%;
    }

    .computer-play, .player-play {
        display: flex;
        justify-content: space-around;
        margin: 10px 0;
    }

    .card {
        width: 64px;
        height: 64px;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        background-color: #333;
        transition: transform 0.3s ease;
    }

    .player-card:hover {
        transform: translateY(-10px);
    }

    .player-card.selected {
        transform: translateY(-20px);
        box-shadow: 0 0 10px rgba(10, 132, 255, 0.8);
    }

    .game-controls {
        display: flex;
        justify-content: space-around;
        width: 100%;
        margin-top: 20px;
    }
</style>

@code {
    private bool[] selectedCards = new bool[17];

    private void ToggleCardSelection(int index)
    {
        selectedCards[index] = !selectedCards[index];
    }

    private void ExitGame()
    {
        // Exit the game
    }

    private void ResetGame()
    {
        // Reset the game
    }

    private void ShowRules()
    {
        // Show the rules
    }

    private void PlayCard()
    {
        // Play the selected card
    }

    private void DiscardCards()
    {
        // Discard the selected cards
    }

    private void ShowMenu()
    {
        // Show the main menu
    }
}
